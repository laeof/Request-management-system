@model RequestViewModel

<title>@ViewBag.Title</title>
<div class="page-info">
    <h2>@ViewBag.Title</h2>
    <div class="switcher">
        <h2 style="display: flex; margin-right: 30px;">Режим карток</h2>
        <label class="switch">
            <input type="checkbox" id="tablecheck" onclick="savePreference('modePreference', 'tablecheck', toggleTable);">
            <span class="slider round"></span>
        </label>
    </div>
</div>
<div class="requests">
    <table class="table" id="table">
        <tr class="first-row">
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].Lifecycle.Current)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Requests[0].ClosedId)
            </th>
            @if (User.IsInRole("admin") || User.IsInRole("manager"))
            {
                <th>
                    @Html.DisplayNameFor(model => model.Requests[0].ClosedId)
                </th>
            }
        </tr>
        <tbody class="tbody">
        @foreach (var item in Model.Requests)
        {
            string rowClass = "row";
            if (item.Priority == 1)
            {
                rowClass += " default";
            }
            else if (item.Priority == 2)
            {
                rowClass += " critical";
            }
            <tr class="trow" onclick="if (!event.target.closest('.actions')) { window.location.href = '@Url.Action("Info", new { id = item.Id })'; }">
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Id)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Id)
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                            @Html.DisplayNameFor(model => item.Category.Name)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Priority)
                    </div>
                    <div class="displayfor">
                        @Html.Raw(PriorityModel.GetPriority(item.Priority))
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Comment)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Comment)
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Address)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Address)
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Lifecycle.Current)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Lifecycle.Current)
                    </div>
                </th>
                <th class="@rowClass">
                    <div class="namefor">
                        @Html.DisplayNameFor(model => item.Lifecycle.Closed)
                    </div>
                    <div class="displayfor">
                        @Html.DisplayFor(modelItem => item.Lifecycle.Closed)
                    </div>
                </th>
                    @if (User.IsInRole("admin") || User.IsInRole("manager"))
                    {
                        <th class="@rowClass">
                            <div class="namefor">
                                @Html.DisplayNameFor(model => item.ClosedId)
                            </div>
                            <div class="displayfor">
                                @Html.DisplayFor(modelItem => item.Close.FirstName)
                                @Html.Raw(" ")
                                @Html.DisplayFor(modelItem => item.Close.Surname)
                            </div>
                        </th>
                    }
            </tr>
        }
        </tbody>
</table>
</div>
<div class="pagination">
    @if (ViewBag.CurrentPage > 1)
    {
        <a href="@Url.Action("ClosedRequests", new { page = ViewBag.CurrentPage - 1 })">Previous</a>
    }

    @for (int i = 1; i <= ViewBag.TotalPages; i++)
    {
        <a href="@Url.Action("ClosedRequests", new { page = i })" @(i == ViewBag.CurrentPage ? "class=active" : "")>@i</a>
    }

    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
    {
        <a href="@Url.Action("ClosedRequests", new { page = ViewBag.CurrentPage + 1 })">Next</a>
    }
</div>
